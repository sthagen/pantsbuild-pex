[build-system]
# N.B.: We use an in-tree backend just to get our hatchling in-tree plugins visible without having
# to publish a plugin distribution. The real backend is `hatchling.build` and the
# `pex_build.hatchling.build` backend is a very thin wrapper that just serves to expose our hook
# entry point metadata so the hook is discovered.
backend-path = ["build-backend"]
build-backend = "pex_build.hatchling.build"
requires = ["hatchling"]

[tool.hatch.metadata.hooks.pex-dynamic-requires-python]
# We need this empty table to enable our hook.

[project]
name = "pex"
dynamic = ["version"]
requires-python = ">=2.7,<3.13,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*"
authors = [
  {name = "The PEX developers", email="pantsbuild@gmail.com"}
]
description = "The PEX packaging toolchain."
readme = "README.rst"
license-files = { paths = ["LICENSE"] }
keywords = ["package", "executable", "virtualenv", "lock", "freeze"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: Unix",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Programming Language :: Python",
  "Programming Language :: Python :: 2",
  "Programming Language :: Python :: 2.7",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.5",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Build Tools",
  "Topic :: System :: Archiving :: Packaging",
  "Topic :: System :: Software Distribution",
  "Topic :: Utilities",
]

[project.optional-dependencies]
subprocess = [
  "subprocess32>=3.2.7; python_version < '3'"
]

[project.scripts]
pex = "pex.bin.pex:main"
pex3 = "pex.cli.pex:main"
pex-tools = "pex.tools.main:main"

[project.entry-points."distutils.commands"]
bdist_pex = "pex.distutils.commands.bdist_pex:bdist_pex"

[project.urls]
Homepage = "https://github.com/pantsbuild/pex"
Download = "https://github.com/pantsbuild/pex/releases/latest/download/pex"
Changelog = "https://github.com/pantsbuild/pex/blob/main/CHANGES.md"
Documentation = "https://pex.readthedocs.io/en/latest/"
Source = "https://github.com/pantsbuild/pex"

[tool.hatch.version]
path = "pex/version.py"
pattern = '__version__ = "(?P<version>[^"]+)"'

[tool.black]
line-length = 100
target-version = ["py27"]
exclude = '''
/pex/(
  vendor/_vendored/
  |venv/virtualenv_16\.7\.12_py
)
'''

[tool.isort]
profile = "black"
line_length = 100
# The default skip list includes venv which causes pex/venv/** to be skipped; so we blank out the
# defaults here.
skip = []
skip_glob = [
  "pex/vendor/_vendored/**",
  "pex/venv/virtualenv_16.7.12_py"
]
