[tox]
isolated_build = true
skip_missing_interpreters = True

# N.B.: When bumping the minversion, update the pinned versions we install in linux and osx shards
# in `.travis.yml`.
minversion = 3.14.1

# N.B.: Pex tests run via tox for Python 2.7 fail starting at virtualenv==20.0.5 so we pin
# virtualenv just below that and, correspondingly, tox at the highest version that supports
# virtualenv 20.0.4.
# See: https://github.com/pantsbuild/pex/issues/967
# N.B.: When altering these requires, make the corresponding alteration to .travis.yml.
requires =
  tox<=3.14.5
  virtualenv<20.0.5

envlist =
        py{py,27,38},format-check,integration-tests

[tox:.package]
# N.B.: tox will use the same python version as under what tox is installed to package, so unless
# this is python 3 you can require a given python version for the packaging environment via the
# basepython key. We need this for flit which only runs under python3 but works for python2
# projects.
basepython = python3

[testenv]
commands =
    pytest --ignore="tests/test_integration.py" {posargs:-vvs}

    # Ensure pex's main entrypoint can be run externally.
    pex --cache-dir {envtmpdir}/buildcache . -e pex.bin.pex:main --version
deps =
    pytest==4.6.6
    pkginfo==1.5.0.1
    list-tests: mock==3.0.5
    py27: mock==3.0.5
    pypy: mock==3.0.5
    coverage: coverage==4.5.4
    subprocess: subprocess32
passenv =
    # These are to support directing test environments to the correct OpenSSL on OSX.
    CPPFLAGS
    LDFLAGS
whitelist_externals =
    open
    bash
    git

[testenv:integration-tests]
deps =
    tox
commands =
    tox -e py27-integration -- {posargs:-vvs}
    tox -e py38-integration -- {posargs:-vvs}
    tox -e pypy-integration -- {posargs:-vvs}

[testenv:py27-integration]
commands =
    pytest tests/test_integration.py {posargs:-vvs}

[testenv:py38-integration]
commands =
    pytest tests/test_integration.py {posargs:-vvs}

[testenv:py39-integration]
commands =
  pytest tests/test_integration.py {posargs:-vvs}

[testenv:pypy-integration]
commands =
    pytest tests/test_integration.py {posargs:-vvs}

[integration]
commands =
    # This is necessary due to https://bitbucket.org/hpk42/tox/issue/175/cant-do-substitution-base-commands
    bash scripts/coverage.sh

[testenv:list-tests]
commands = python scripts/list_tests.py

[testenv:py27-coverage]
commands = {[integration]commands}

[testenv:py35-coverage]
commands = {[integration]commands}

[testenv:py36-coverage]
commands = {[integration]commands}

[testenv:py37-coverage]
commands = {[integration]commands}

[testenv:py38-coverage]
commands = {[integration]commands}

[testenv:py39-coverage]
commands = {[integration]commands}

[testenv:pypy-coverage]
commands = {[integration]commands}

[testenv:py27-coverage-simple]
commands =
    coverage erase
    coverage run -p -m pytest {posargs:}
    coverage combine
    coverage report
    coverage html
    open htmlcov/index.html

[testenv:coverage]
deps =
    coverage==4.5.4
    tox
commands =
    # meta
    tox -e py27-coverage
    tox -e py27-subprocess-coverage
    tox -e py37-coverage
    tox -e pypy-coverage
    tox -e pypy-subprocess-coverage
    python scripts/combine_coverage.py
    coverage report
    coverage html
    open htmlcov/index.html

[testenv:format-run]
skip_install = true
deps =
  black==20.8b1
  isort==4.3.21
commands =
    black .
    isort \
      --apply \
      --dont-skip __init__.py \
      --skip-glob pex/vendor/_vendored/** \
      --skip-glob .pyenv_test/**

[testenv:format-check]
skip_install = true
deps =
  {[testenv:format-run]deps}
commands =
    black --check .
    isort \
      --check-only \
      --dont-skip __init__.py \
      --skip-glob pex/vendor/_vendored/** \
      --skip-glob .pyenv_test/**

[testenv:typecheck]
deps =
    mypy==0.782
commands =
    mypy pex/ tests/
    mypy --py2 pex/ tests/

[testenv:vendor]
skip_install = true
deps =
  ansicolors==1.1.8
  pip==20.2.4
  redbaron==0.9.2
  setuptools==50.3.2
  wheel==0.35.1
  {[testenv:format-run]deps}
commands =
  python -m pex.vendor
  {[testenv:format-run]commands}

[testenv:vendor-check]
# The vendored dist may contain references to the python version it was built on
# (e.g., pex/vendor/_vendored/pip/pip-20.0.dev0.dist-info/entry_points.txt).
# So this test restricts the python version, to prevent spurious diffs that will cause it to fail.
basepython = python3.8
skip_install = true
deps =
  tox
commands =
  tox -e vendor
  git diff --exit-code

[testenv:docs]
changedir = docs
deps =
    sphinx
    sphinx-rtd-theme
commands =
    sphinx-build -b html -d {envtmpdir}/doctrees . _build/html
    open _build/html/index.html

[testenv:package]
skip_install = true
basepython = python3
deps =
  pytoml
commands =
  python scripts/package.py {posargs}

[testenv:serve]
skip_install = true
basepython = python3
deps =
  flit
  pygments
  pytoml
commands =
  python scripts/package.py --additional-format wheel --local --serve {posargs}

[testenv:publish]
skip_install = true
deps =
  flit
  pygments
commands =
  flit publish

# Would love if you didn't have to enumerate environments here :-\
[testenv:py27]
[testenv:py27-subprocess]
[testenv:py35]
[testenv:py36]
[testenv:py37]
[testenv:py38]
[testenv:py39]
[testenv:pypy]
[testenv:pypy-subprocess]
